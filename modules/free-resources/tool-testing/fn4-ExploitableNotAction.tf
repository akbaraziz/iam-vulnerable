resource "aws_iam_policy" "fn4-exploitableNotAction" {
  name        = "fn4-exploitableNotAction"
  path        = "/"
  description = "Allows non iam privesc paths like ssm and ec2-connect-instance"

  # Terraform's "jsonencode" function converts a
  # Terraform expression result to valid JSON syntax.
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        NotAction = [
          "iam:Update*",
          "iam:Create*",
          "iam:Attach*"
        ]
        Effect   = "Allow"
        Resource = "*"
      },
    ]
  })
  tags = {
    yor_trace = "69774de2-a1e6-4e99-901c-a89b804f8415"
  }
}



resource "aws_iam_role" "fn4-exploitableNotAction-role" {
  name = "fn4-exploitableNotAction-role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Sid    = ""
        Principal = {
          AWS = var.aws_assume_role_arn
        }
      },
    ]
  })
  tags = {
    yor_trace = "24c2711c-34a6-431f-8b79-112af510dc07"
  }
}


resource "aws_iam_user" "fn4-exploitableNotAction-user" {
  name = "fn4-exploitableNotAction-user"
  path = "/"
  tags = {
    yor_trace = "ef81efea-8c9d-40fa-aa07-b9ca8ca36531"
  }
}

resource "aws_iam_access_key" "fn4-exploitableNotAction-user" {
  user = aws_iam_user.fn4-exploitableNotAction-user.name
}


resource "aws_iam_user_policy_attachment" "fn4-exploitableNotAction-user-attach-policy" {
  user       = aws_iam_user.fn4-exploitableNotAction-user.name
  policy_arn = aws_iam_policy.fn4-exploitableNotAction.arn
}

resource "aws_iam_role_policy_attachment" "fn4-exploitableNotAction-role-attach-policy" {
  role       = aws_iam_role.fn4-exploitableNotAction-role.name
  policy_arn = aws_iam_policy.fn4-exploitableNotAction.arn

}  